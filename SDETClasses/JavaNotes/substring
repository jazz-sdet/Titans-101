August 11, 2020

String computer="ImacIa"; 

NOTE: 
computer --> variable name. It is also called reference name of object. 

String is immutable. Once you use the string method like toLowerCase() or toUpperCase(), the original string value will not change unless you reassign the string. 

String Methods
1- length() --> return int
2- charAt() --> takes one parameter as int value(index number of character in string) and returns char value
	computer.charAt(2); --> a
	computer.charAt(5); --> StringIndexOutOfBoundException (Runtime Exception)
	NOTE: inside the parathesis is called parameter. 
3- indexOf() --> It takes one parameter as String and returns the index number of first matching of string value. 
	computer.indexOf("a"); -> 2 
	computer.indexOf("A"); -> -1  
	computer.indexOf("Im"); -> 0
	computer.indexOf("Ia"); -> 4
	computer.indexOf("Ic"); -> -1
	int indexNumber=computer.indexOf("I"); --> it gives first "I" index number --> 0 
	computer.indexOf("I",indexNumber+1); 
4- toLowerCase() and toUpperCaseMethod() --> both of them returns String value. 

toLowerCase() --> converts the string to the lower case. 
toUpperCaseMethod() --> converts the string to the upper case. 

String computer="Imac"; 

computer.toUpperCase(); --> Since the string is immutable, your original String value will not change. 

sout(computer); --> Imac

computer=computer.toUpperCase(); --> There is a reassingment in this line. 

sout(computer); --> IMAC

=====================================
String car="Mercedes"; 

sout(car.toLowerCase()); --> "mercedes"

sout(car); --> "Mercedes"

5- concat() --> This method is taking one parameter to concatenate the given parameter with your original String. Return type of concat method is "String". 

String tshirt="Lacost"; 

tshirt.concat("-$100"); 

sout(tshirt); --> "Lacost"

tshirt=tshirt.concat("-$100"); 

sout(tshirt); --> "Lacost-$100";
=============================

How you can check in your string you have a given value or not. 



TASK: 
Using scanner ask user to enter one String value 

Then ask user to enter another string value 

If we have second string value inside first string print true otherwise print false. 

Techtorial

acad

false


6- startsWith() --> This method takes one parameter as String value, if your string is starting with provided parameter, the method return true otherwise it will return false

String brand="Insignia"; 

brand.startsWith("Ins"); --> The method returns true since the brand is starting with "Ins". 

========================
endsWith() --> this method takes one parameter as String value, if your string is ending with provided parameter, the method returns true otherwise it will return false

brand.endsWith("a"); --> this one returns true
brand.endsWith("signi"); --> false
brand.endsWith("gnia"); --> true

========================
contains() --> this method takes one parameter as String value, if your string contains anywhere the provided parameter, the method returns true otherwise it will return false. 

brand.contains("signi"); --> true
brand.contains("signal"); --> false

TASK: 
Using scanner ask user to enter three String input
Print true if first input contains the second input and ends with second input
Print true if first input starts with third input  

===========
String firstInput="EPSON"

secondInput="ON" 

thirdInput="EP"

=============
String firstInput="EPSON"

secondInput="SO"; 

thirdInput="RE"; 

========================================================

7- equals() and equalsIgnoreCase() method 

equals() --> takes one String as parameter and compare given value is exactly equals to the original string. If they are exactly equals to each other this method will return true otherwise it will return false. 

String animal="Deer "; 

animal.equals("Deer");  --> True

animal.equals("ee"); --> false

animal.contains("ee"); --> true

animal.equals("deer"); --> false

------------------
equalsIgnoreCase() --> takes one parameter as String value and compare it with your original string ignoring upper and lower cases. 

animal.equalsIgnoreCase("deer"); --> true

animal.equalsIgnoreCase("deer animal"); --> false

animal.contains("deer"); --> false

====================================

== sign --> this one for primitive data types. We use == sign to compare primitive data types. 

true == true
10 == 10 
'a' == 'c'
6.5 == 4.3

.equals() method --> We use .equals() method to compare two String objects.

=====================================

8- substring() --> it gives us partial value from string(). There are two implementation of substring() method one implementation takes one parameter and other one takes two parameter. Return type of substring method is String. 

substring(int indexNumber) --> it will take the string value starting from given indexNumber until at the end of your string. 

String tool="mouse"; 

tool.substring(2); --> use 

---------------------
substring(int firstIndex, int secondIndex) --> return partial value from String between starting index number till second index number

tool.substring(1,3); --> take the value for index number 1 and 2. DO not include index number of 3:  ou

tool.substring(0,4); --> 0, 1, 2, 3 --> mous
